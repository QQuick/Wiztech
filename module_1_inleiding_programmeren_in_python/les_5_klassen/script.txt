Intro
=====

Welkom bij les 5 uit de cursus "Inleiding programmeren in Python",
onderdeel van de WizTech lessenserie.
Deze les gaat over klassen en objecten.
Mijn naam is Jacques de Hooge.

In de vorige les stonden functies centraal. Dat wil zeggen taken en subtaken die een computerprogramma kan verrichten, zoals het tekenen van een vierkant of het aanbieden van reken-oefeningen. Die taken kunnen varieren. Zo kun je de tafels een voor een oefenen of allemaal achtereenvolgens, of door elkaar. Echter al deze taken draaien om de tafels van vermenigvuldiging, dat verandert niet.

Objecten, dingen, zoals de tafels van vermenigvuldiging, zijn blijkbaar minder veranderlijk, stabieler, dan de taken die erop worden verricht. Daarom is het handig een programma in de eerste plaats op te zetten rondom deze dingen, de objecten, en vervolgens de taken, de functies, daar aan te koppelen. Objecten hoeven niet tastbaar te zijn. In tegenstelling tot een eettafel kun je een tafel van vermenigvuldiging niet beetpakken. Maar dat is geen bezwaar. Het is toch een object. Immers getallen kun je ook niet beetpakken, en we zagen al in les 1 dat dit objecten waren van een bepaalde klasse, soort, zoals integer of string.

Er bestaat een naam voor de denkwijze waarbij objecten centraal worden gesteld: Object Georienteerd Programmeren. Dat wil zeggen dat je je primair op de objecten richt waar je programma over gaat, zoals tafels van vermenigvuldiging, en pas daarna op de functies die bepaalde taken verrichten met die objecten, zoals het oefenen van een tafel of het opslaan van de score. Een functie die speciaal bedoeld is om met een bepaald soort object te werken heet een methode (method) van dat object.

De object georienteerde denkwijze wordt ook wel het object georienteerde paradigma genoemd. Paradigma betekent dus gewoon denkwijze. Breid je woordenschat geleidelijk uit, dan kun je straks met vakgenoten praten en vakliteratuur over software ontwikkeling lezen.

En, o ja, je bent hartelijk welkom om alleen maar naar deze video te kijken en te luisteren. Maar echt leren programmeren doe je alleen als je de voorbeeldprogramma's namaakt en vooral: zelf experimenteert, fouten durft te maken en ervan leert. Zet af en toe de video stop en probeer dingen uit. Gun jezelf alle tijd. Je bent immers een vak aan het leren waar je je leven lang plezier van kunt hebben en een goed belegde boterham aan kunt overhouden.

Wat naast zelf experimenteren ook goed werkt is herhaling. Je kunt bijvoorbeeld een oude les versneld afspelen, of alleen een bepaald deel.

De gebruikte broncode vindt je op www.wiztech.nl. Maar type ook dingen zelf in, een deel van het geheugen loopt via je vingers, zoals elke pianist weet.
