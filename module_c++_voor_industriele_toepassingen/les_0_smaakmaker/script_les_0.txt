Scenes:
*******

Strand Griekenland
=================

Welkom bij deze inleidende les van de cursus C++ voor industriele toepassingen,
onderdeel van de WizTech lessenserie.
Mijn naam is Jacques de Hooge.

C++ is een uitbreiding van de taal C, in de jaren 70 van de vorige eeuw ontworpen door Brian Kernighan en Denis Ritchie.
C was een kleine, simpele taal en werd beschreven in een dun boekje.
Hier heb ik de eerste druk, inmiddels een collectors-item.

Altijd als ik dit boekje pak, gaan mijn herinneringen terug naar het strand van het Griekse eiland Kos.
Daar, op mijn 20e, liggend op mijn buik in het grove, warme zand, leerde ik C.
Voor in dit exemplaar staat de naam Dionysia Lagou, wonend in Kefalos, de hoofdstad van Kos.
Dionysia was zo'n typische Griekse oma, gekleed in zwart, tenger en vriendelijk.
Ze woonde op nr. 32 in Kefalos, straatnamen waren niet nodig, daar was 't stadje te klein voor.
We namen een foto van haar en ik beloofde die naar haar op te sturen.
Of het er ooit van gekomen is, weet ik niet meer.

Als ik dit boekje nu doorlees, valt me op hoe ongelofelijk nauwkeurig en to the point het is.
Geen vage flauwekul, geen leuk bedoelde opmerkingen.
Gewoon een hele practische beschrijving van een hele practische taal, zonder geleuter in ronkend IT jargon.
Heerlijk!

In de jaren daarop werd C uitgebreid met klassen en objecten tot "C with classes", later omgedoopt tot C++.
Daarna groeide de taal stap voor stap uit, tot wat nu wel "Modern C++" genoemd wordt.
Niets zo ouderwets als het woord "Modern".
Het doet me denken aan doorzon-flats, de sexuele revolutie en nozems die op hun Puchjes rondhingen voor de snackbar op het Heeswijkplein in den Haag, waar ik geboren ben.

C++ was in Nederland nog onbekend, maar ik zag er wel wat in en ging in de VS op cursus bij de enige fabrikant die op dat moment een bruikbare, betaalbare C++ compiler maakte, Borland, tegenwoordig Embarcadero.
Microsoft volgde jaren later.

Teruggekomen in Nederland legde ik contact tussen Borland, het Nederlands Opleidingsinstituut voor Informatica (NOVI) en de stichting Exin, die examinering en certificering van IT-opleidingen verzorgde.
Ik vervaardigde een Nederlandstalige C++ cursus en werd tevens voorzitter van een nieuw samengestelde examencommissie.
Via NOVI gaf ik de cursus talloze malen en leidde zo de eerste generatie opleiders in Nederland op.

De manier waarop C in de loop der jaren is uitgebreid tot Modern C++ is uniek.
Dit komt omdat twee principes consequent worden gehanteerd:

1. What you don't use, you don't pay for.
2. What you do use, you couldn't hand-code any better.

Dit houdt in dat vergelijkbare code in C++ en C compileert naar exact dezelfde machinetaal, zonder enige overhead.
Dit geldt ook indien klassen en objecten worden gebruikt, de gegenereerde assembler is letterlijk hetzelfde.

Daarnaast zijn er optionele features, zoals virtuele functies, die met een kleine overhead een wereld aan comfort en elegantie binnen bereik brengen, maar zoals gezegd: optioneel.

Hetzelfde geldt bijvoorbeeld voor strings.
De originele C strings zijn bloedsnel, superzuining met geheugen en worden nog steeds volledig ondersteund.
Daanaast is er de "Moderne" string class, comfortabel, intuitief en met enige, zij het minimale, overhead.

In C++ kun je altijd kiezen.
En dat is nu precies het probleem met de taal: WAT moet je kiezen.
Het vergt een hoop ervaring om daarachter te komen.

Deze cursus is de vrucht van mijn 42 jaar ervaring met C en C++.
Het verhaal gaat dat zelfs Bjarne Stroustrup, de ontwerper van C++ niet de hele taal beheerst.
Of dat waar is weet ik niet, IK in ieder geval niet, na 42 jaar dagelijks gebruik.
Maar, vooral in combinatie met Python, waar het naadloos mee kan samenwerken,
is het een ongelofelijk powertool, dat me nog nooit teleurgesteld heeft.

Alles, van de simpelste microcontroller tot de meest complexe medical imaging apparatuur,
van de koffieautomaat tot het modernste ruimtevaartuig,
is te programmeren in C++, en, belangrijker, WORDT ook echt geprogrammeerd in C++.

De documentatie is nog steeds even nauwkeurig als dit eerste boekje.
Alleen is er nu helaas een legertje taalkundigen nodig om hem te "duiden" voor gewone stervelingen.
Deze "wiskundige nauwkeurigheid" is noodzakelijk voor compilerfabrikanten.
Maar niet om de taal te leren.

In deze cursus gaan we gewoon praktisch aan de slag,
met precies die taal-elementen die je nodig hebt om efficiente en toch onderhoudbare software te maken voor uiteenlopende technische toepassingen.

Daarbij gaan we complexiteit niet uit de weg.
We hebben het over pointers, references, dynamisch geheugenbeheer, polymorphism, multiple inheritance, operator overloading, templates en container classes.

Voor de wat meer exotische uithoeken van de taal is Google je vriend.
Om te beginnen maar eens een inkijkje in de rol van C++ in onze aan techniek verslaafde samenleving.

Snelweg
=======

Stel dat alle C en C++ programma's stopten met werken,
dan zouden vrijwel alle auto's stoppen, omdat het motor-management systeem het zouden laten afweten.

Dat zou niet zo erg zijn, want de schermen van de navigatie-systemen zouden ook op zwart gaan.
Op zich geen ramp, want de GPS satelieten, waar ze hun positie-informatie vandaan halen, zouden er ook mee kappen.

Meisje voor TV
==============

Dus zouden we thuis blijven en TV kijken, geen Internet, want alle routers zouden uitvallen,
net als alle browsers trouwens.

Jammer genoeg zou er ook niks op TV zijn, want alle zenders zouden ermee kappen, geen uitzendingen dus.

Ingang ziekenhuis
=================

Mensen met een pacemaker zouden trouwens beter naar het ziekenhuis kunnen gaan dan thuisblijven,
want die levenbrengende klokjes zouden er meteen mee stoppen.

Maar het ziekenhuis zou een teleurstellende ervaring zijn, omdat alle diagnose-apparatuur zou zijn uitgevallan.
Niet dat dat wat uitmaakt, want de deuren gaan geeneens open.

Raam met sneeuw
===============

En dat is maar goed ook, want de verwarming valt uit.

Geparkeerde vliegtuigen
=======================

Net zoals alles met een real-time besturing het begeeft, zoals vliegtuigen en boten.

Leeg treinstation
=================

En ook de treinen staan stil, maar daar zijn we wel aan gewend.

Stadslampen die uitgaan
=======================

Trouwens, de gehele energievoorziening zou sowieso uitvallen,
zon, wind, olie, gas...
Terug naar de natuur!

Strand Griekenland
==================

Bjarne Stroustrup heeft eens gezegd:

"There are only two kinds of programming languages: the ones people complain about and the ones nobody uses."

In de volgende les maken we gelijk onze handen vuil.
Praatjes vullen geen gaatjes.

Zo'n 20 jaar geleden dacht ik, multi-media, dat wordt het helemaal.
Misschien moet ik maar eens wat anders gaan doen dan C++.

Gelukkig heb ik nooit de daad bij het woord gevoegd.
Het was me al snel duidelijk dat de hele multi-media hype meer met consumenten-electronica
en bedrijfsovernames tussen oppermachtige content providers te maken had,
dan met harde, technisch uitdagende applicaties.

Sindsdien heeft het me nooit aan werk ontbroken, het wordt eigenlijk alleen maar meer.
Ben je een beetje klaar met het maken van de zoveelste website?
Spits dan je oren, verlaat de gevangenis zonder betalen en ga door naar les 1.
